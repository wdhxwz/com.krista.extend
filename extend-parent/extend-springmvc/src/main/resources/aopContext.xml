<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 启动AspectJ自动代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"/>

    <!-- 切面类 -->
    <bean id="controllerLog" class="com.krista.extend.spring.aop.ControllerLogAop"></bean>
    <aop:config proxy-target-class="true">
        <aop:aspect id="controllerLogAspect" ref="controllerLog">
            <!-- 定义切点,指定切入点表达式 -->
            <aop:pointcut expression="execution(public * com..*Controller.*(..)) or execution(public * cn..*Controller.*(..))"
                          id="controller"/>
            <!-- 在连接点之前执行 -->
            <aop:before method="doBefore" pointcut-ref="controller"/>
            <!-- 在连接点正常完成后执行 returning的值必须与方法的参数名一致-->
            <aop:after-returning method="doAfter" pointcut-ref="controller" returning="returnValue"/>
            <!-- 最终返回后执行(不管是正常执行还是抛异常) -->
            <!--<aop:after method="doAfter" pointcut-ref="controller"/>-->
            <!-- 抛出异常后执行 throwing的值必须与方法的参数名一致-->
            <!--<aop:after-throwing method="doException" pointcut-ref="businessService" throwing="e"/>-->
            <!-- 环绕通知
            <aop:around method="doAround" pointcut-ref="businessService"/>-->
        </aop:aspect>
    </aop:config>
</beans>